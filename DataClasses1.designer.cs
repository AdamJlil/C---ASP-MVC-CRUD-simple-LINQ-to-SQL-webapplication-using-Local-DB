#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProf(Prof instance);
    partial void UpdateProf(Prof instance);
    partial void DeleteProf(Prof instance);
    partial void InsertSt(St instance);
    partial void UpdateSt(St instance);
    partial void DeleteSt(St instance);
    partial void Insertplg_horaire(plg_horaire instance);
    partial void Updateplg_horaire(plg_horaire instance);
    partial void Deleteplg_horaire(plg_horaire instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Prof> Profs
		{
			get
			{
				return this.GetTable<Prof>();
			}
		}
		
		public System.Data.Linq.Table<St> Sts
		{
			get
			{
				return this.GetTable<St>();
			}
		}
		
		public System.Data.Linq.Table<plg_horaire> plg_horaires
		{
			get
			{
				return this.GetTable<plg_horaire>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prof")]
	public partial class Prof : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProf;
		
		private string _user;
		
		private string _pass;
		
		private string _auto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProfChanging(int value);
    partial void OnIdProfChanged();
    partial void OnuserChanging(string value);
    partial void OnuserChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnautoChanging(string value);
    partial void OnautoChanged();
    #endregion
		
		public Prof()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProf", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProf
		{
			get
			{
				return this._IdProf;
			}
			set
			{
				if ((this._IdProf != value))
				{
					this.OnIdProfChanging(value);
					this.SendPropertyChanging();
					this._IdProf = value;
					this.SendPropertyChanged("IdProf");
					this.OnIdProfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[user]", Storage="_user", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user
		{
			get
			{
				return this._user;
			}
			set
			{
				if ((this._user != value))
				{
					this.OnuserChanging(value);
					this.SendPropertyChanging();
					this._user = value;
					this.SendPropertyChanged("user");
					this.OnuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_auto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string auto
		{
			get
			{
				return this._auto;
			}
			set
			{
				if ((this._auto != value))
				{
					this.OnautoChanging(value);
					this.SendPropertyChanging();
					this._auto = value;
					this.SendPropertyChanged("auto");
					this.OnautoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.St")]
	public partial class St : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSt;
		
		private string _user;
		
		private string _pass;
		
		private string _auto;
		
		private string _email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdStChanging(int value);
    partial void OnIdStChanged();
    partial void OnuserChanging(string value);
    partial void OnuserChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnautoChanging(string value);
    partial void OnautoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public St()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSt", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSt
		{
			get
			{
				return this._IdSt;
			}
			set
			{
				if ((this._IdSt != value))
				{
					this.OnIdStChanging(value);
					this.SendPropertyChanging();
					this._IdSt = value;
					this.SendPropertyChanged("IdSt");
					this.OnIdStChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[user]", Storage="_user", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user
		{
			get
			{
				return this._user;
			}
			set
			{
				if ((this._user != value))
				{
					this.OnuserChanging(value);
					this.SendPropertyChanging();
					this._user = value;
					this.SendPropertyChanged("user");
					this.OnuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_auto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string auto
		{
			get
			{
				return this._auto;
			}
			set
			{
				if ((this._auto != value))
				{
					this.OnautoChanging(value);
					this.SendPropertyChanging();
					this._auto = value;
					this.SendPropertyChanged("auto");
					this.OnautoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.plg_horaire")]
	public partial class plg_horaire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPlg;
		
		private string _L;
		
		private string _M;
		
		private string _Mer;
		
		private string _J;
		
		private string _V;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPlgChanging(int value);
    partial void OnIdPlgChanged();
    partial void OnLChanging(string value);
    partial void OnLChanged();
    partial void OnMChanging(string value);
    partial void OnMChanged();
    partial void OnMerChanging(string value);
    partial void OnMerChanged();
    partial void OnJChanging(string value);
    partial void OnJChanged();
    partial void OnVChanging(string value);
    partial void OnVChanged();
    #endregion
		
		public plg_horaire()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPlg", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPlg
		{
			get
			{
				return this._IdPlg;
			}
			set
			{
				if ((this._IdPlg != value))
				{
					this.OnIdPlgChanging(value);
					this.SendPropertyChanging();
					this._IdPlg = value;
					this.SendPropertyChanged("IdPlg");
					this.OnIdPlgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L", DbType="VarChar(50)")]
		public string L
		{
			get
			{
				return this._L;
			}
			set
			{
				if ((this._L != value))
				{
					this.OnLChanging(value);
					this.SendPropertyChanging();
					this._L = value;
					this.SendPropertyChanged("L");
					this.OnLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M", DbType="VarChar(50)")]
		public string M
		{
			get
			{
				return this._M;
			}
			set
			{
				if ((this._M != value))
				{
					this.OnMChanging(value);
					this.SendPropertyChanging();
					this._M = value;
					this.SendPropertyChanged("M");
					this.OnMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mer", DbType="VarChar(50)")]
		public string Mer
		{
			get
			{
				return this._Mer;
			}
			set
			{
				if ((this._Mer != value))
				{
					this.OnMerChanging(value);
					this.SendPropertyChanging();
					this._Mer = value;
					this.SendPropertyChanged("Mer");
					this.OnMerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_J", DbType="VarChar(50)")]
		public string J
		{
			get
			{
				return this._J;
			}
			set
			{
				if ((this._J != value))
				{
					this.OnJChanging(value);
					this.SendPropertyChanging();
					this._J = value;
					this.SendPropertyChanged("J");
					this.OnJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V", DbType="VarChar(50)")]
		public string V
		{
			get
			{
				return this._V;
			}
			set
			{
				if ((this._V != value))
				{
					this.OnVChanging(value);
					this.SendPropertyChanging();
					this._V = value;
					this.SendPropertyChanged("V");
					this.OnVChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
